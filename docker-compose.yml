version: '3'

services:
#  db:
#    container_name: mariadb
#    image: mariadb:${MARIADB_VERSION}
#    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
#    restart: unless-stopped
#    volumes:
#      - ./datadir/mariadb:/var/lib/mysql
#    env_file:
#      - db.env
#
#  redis:
#    container_name: redis
#    image: redis:${REDIS_VERSION}
#    restart: always

  app:
    container_name: nextcloud
    build:
      context: ./nextcloud
      args:
        NEXTCLOUD_VERSION: ${NEXTCLOUD_VERSION}
    image: nelisvolschenk/nextcloud:${NEXTCLOUD_VERSION}-s3fs${S3FS_VERSION}
    restart: unless-stopped
    cap_add:
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    devices:
      - /dev/fuse
    volumes:
      - ./datadir/nextcloud/main:/var/www/html:rshared
      - ./datadir/nextcloud/bucket:/opt/s3fs/bucket:rshared
    ports:
    - 80:80
    environment:
#      MYSQL_HOST: db
#      REDIS_HOST: redis
      AWS_S3_MOUNT: /opt/s3fs/bucket
      S3FS_ARGS: ''
      S3FS_DEBUG: 0
      UID: ${UID}
      GID: ${GID}
    env_file:
      - db.env
      - storage.env
      - web.env
      - nextcloud.env
#    depends_on:
#      - db
#      - redis
    networks:
      - proxy-tier
      - default

#  proxy:
#    container_name: proxy
#    build: ./proxy
#    restart: unless-stopped
#    ports:
#      - 80:80
#      - 443:443
#    labels:
#      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
#    volumes:
#      - ./datadir/proxy/certs:/etc/nginx/certs:ro
#      - ./datadir/proxy/vhost.d:/etc/nginx/vhost.d
#      - ./datadir/proxy/html:/usr/share/nginx/html
#      - /var/run/docker.sock:/tmp/docker.sock:ro
#    networks:
#      - proxy-tier

#  letsencrypt-companion:
#    container_name: letsencryptcompanion
#    image: jrcs/letsencrypt-nginx-proxy-companion
#    restart: unless-stopped
#    volumes:
#      - ./datadir/proxy/certs:/etc/nginx/certs
#      - ./datadir/proxy/vhost.d:/etc/nginx/vhost.d
#      - ./datadir/proxy/html:/usr/share/nginx/html
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    networks:
#      - proxy-tier
#    depends_on:
#      - proxy

# self signed
#  omgwtfssl:
#    image: paulczar/omgwtfssl
#    restart: "no"
#    volumes:
#      - certs:/certs
#    environment:
#      - SSL_SUBJECT=servhostname.local
#      - CA_SUBJECT=my@example.com
#      - SSL_KEY=/certs/servhostname.local.key
#      - SSL_CSR=/certs/servhostname.local.csr
#      - SSL_CERT=/certs/servhostname.local.crt
#    networks:
#      - proxy-tier

networks:
  proxy-tier:
